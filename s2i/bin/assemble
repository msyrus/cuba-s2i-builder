#!/bin/bash -e
#
# S2I assemble script for the 's2i-cuba' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

# If the 's2i-cuba' assemble script is executed with the '-h' flag, print the usage.
if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi

# Restore artifacts from the previous build (if they exist).
#
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring build artifacts..."
  mv /tmp/artifacts/. ./
fi

echo "---> Installing application source..."
cp -Rf /tmp/src/. ./

echo "---> Building application from source..."

if ! [ -z "${DB_HOST}"]; then
    sed -i "s/\(host = \).*/\1'$DB_HOST'/g" ./build.gradle
fi

if ! [ -z "${DB_NAME}"]; then
    echo "Setting dbName to $DB_NAME"
    sed -i "s/\(dbName = \).*/\1'$DB_NAME'/g" ./build.gradle
fi

if ! [ -z "${DB_USER}"]; then
    sed -i "s/\(dbUser = \).*/\1'$DB_USER'/g" ./build.gradle
    sed -i "s/\(username=\).*\"/\1\"$DB_USER\"/g" ./modules/core/web/META-INF/context.xml
    sed -i "s/\(username\">\).*</\1$DB_USER</g" ./modules/core/web/META-INF/jetty-env.xml
fi

if ! [ -z "${DB_PASS}"]; then
    sed -i "s/\(dbPassword = \).*/\1'$DB_PASS'/g" ./build.gradle
    sed -i "s/\(password=\).*\"/\1\"$DB_PASS\"/g" ./modules/core/web/META-INF/context.xml
    sed -i "s/\(password\">\).*</\1$DB_PASS</g" ./modules/core/web/META-INF/jetty-env.xml
fi

if ! [ -z "${DB_SYS_USER}"]; then
    sed -i "s/\(oracleSystemUser = \).*/\1'$DB_SYS_USER'/g" ./build.gradle
fi

if ! [ -z "${DB_SYS_PASS}"]; then
    sed -i "s/\(oracleSystemPassword = \).*/\1'$DB_SYS_PASS'/g" ./build.gradle
fi

if ! [ -z "${DB_URL}"]; then
    sed -i "s/\(url=\").*\"/\1$DB_URL\"/g" ./modules/core/web/META-INF/context.xml
    sed -i "s/\(url\">).*</\1$DB_URL</g" ./modules/core/web/META-INF/jetty-env.xml
fi

gradle buildUberJar
gradle clean

mkdir /tmp/app-home
